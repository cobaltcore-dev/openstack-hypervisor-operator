// Code generated by controller-gen. DO NOT EDIT.

package v1

// HyperVisorUpdateStatusApplyConfiguration represents a declarative configuration of the HyperVisorUpdateStatus type for use
// with apply.
type HyperVisorUpdateStatusApplyConfiguration struct {
	InProgress *bool   `json:"inProgress,omitempty"`
	Installed  *string `json:"installed,omitempty"`
	Retry      *int    `json:"retry,omitempty"`
}

// HyperVisorUpdateStatusApplyConfiguration constructs a declarative configuration of the HyperVisorUpdateStatus type for use with
// apply.
func HyperVisorUpdateStatus() *HyperVisorUpdateStatusApplyConfiguration {
	return &HyperVisorUpdateStatusApplyConfiguration{}
}

// WithInProgress sets the InProgress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InProgress field is set to the value of the last call.
func (b *HyperVisorUpdateStatusApplyConfiguration) WithInProgress(value bool) *HyperVisorUpdateStatusApplyConfiguration {
	b.InProgress = &value
	return b
}

// WithInstalled sets the Installed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Installed field is set to the value of the last call.
func (b *HyperVisorUpdateStatusApplyConfiguration) WithInstalled(value string) *HyperVisorUpdateStatusApplyConfiguration {
	b.Installed = &value
	return b
}

// WithRetry sets the Retry field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Retry field is set to the value of the last call.
func (b *HyperVisorUpdateStatusApplyConfiguration) WithRetry(value int) *HyperVisorUpdateStatusApplyConfiguration {
	b.Retry = &value
	return b
}
