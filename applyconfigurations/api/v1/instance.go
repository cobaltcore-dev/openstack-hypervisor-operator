// Code generated by controller-gen. DO NOT EDIT.

package v1

// InstanceApplyConfiguration represents a declarative configuration of the Instance type for use
// with apply.
type InstanceApplyConfiguration struct {
	ID     *string `json:"id,omitempty"`
	Name   *string `json:"name,omitempty"`
	Active *bool   `json:"active,omitempty"`
}

// InstanceApplyConfiguration constructs a declarative configuration of the Instance type for use with
// apply.
func Instance() *InstanceApplyConfiguration {
	return &InstanceApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *InstanceApplyConfiguration) WithID(value string) *InstanceApplyConfiguration {
	b.ID = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *InstanceApplyConfiguration) WithName(value string) *InstanceApplyConfiguration {
	b.Name = &value
	return b
}

// WithActive sets the Active field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Active field is set to the value of the last call.
func (b *InstanceApplyConfiguration) WithActive(value bool) *InstanceApplyConfiguration {
	b.Active = &value
	return b
}
